version: "3"
services:
  # From sources dir run
  #   - build: `docker-compose --file ../debug-helpers/ci/docker-compose.yml --env-file ../debug-helpers/ci/env build`
  #   - run: `docker-compose --file ../debug-helpers/ci/docker-compose.yml --env-file ../debug-helpers/ci/env run -ti linux-ci`
  #      - conan: `conan install project/ --profile=project/vendor/conan-configs/linux.ini -s build_type=Release --build=missing -if=build/conan  -of=build`
  #      - generate: `qt-cmake project -G Ninja -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/home/user/build/conan/conan_toolchain.cmake`
  #      - build: `cmake --build build`
  #      - collect: `linuxdeploy --plugin qt --executable=build/status-desktop --appdir build/AppDir --desktop-file=project/status.desktop --icon-file=project/status.svg --custom-apprun=project/AppRun-cpp`
  #      - install: `cmake --install build --prefix=build/install`
  #      - cp: `cp build/install/lib/* build/AppDir/usr/lib/`
  linux-ci:
    image: linux-build-local
    user: $UID:$GID
    # asumes sources as project-directory
    build:
      context: ci/cpp/
      dockerfile: Dockerfile-linux
    container_name: linux-build
    volumes:
      #- ../../status-desktop:/home/user/project:ro
      # Workaround to status-go in source build requirements
      - ../../status-desktop:/home/user/project:rw
      - ../../status-desktop/build-linux:/home/user/build:rw